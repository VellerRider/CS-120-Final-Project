login page, could be a pop-out window, but seperate page is fine
register page, same as above

Qihang: book page (1/2 pages) -> left column finished
    - there are three states for a book
    - 1. book is library_user
    - 2. book is in library_general but not library_user
    - 3. book is not in database

Qihang: search function - same as main page,  -> basic search finished
    - for books user has, filter library
    - for books in library_general, fetch db then show
    - if not in library_general, need external api, tricky
search suggestion drop down. similar to above

sort fetch current readings. 
    - now we're using book_status is for current reading, maybe need to find a way to sort it

fetch recommendation. should take a simple approach

Phuong - structure of page
note taking features. need:
    - a note pop-out window, or a note management page
    - add note and show notes in book page
    - should be easy

add token data, info data and recommendation data to database
    - if applicable

Maddie:
    add external book logics
        - book-card shows in search result -> book page -> add to both user and general library
        - book shows in search dropdown -> add to both user and general library
    add book to user library similar to above

book page entrance is book-cards
    - for books in user library use prefetched data
    - for book-cards showed in search result:
        - if in library_general, fetch db
        - if not in library_general, need external api, tricky


Some question:  1. review text and value, what is the difference. Do we have review title and author?
                2. book status. What are they?
                3. Database need to store token; user_info could trim first and last name.
                    CREATE TABLE refresh_tokens (
                        token_id INT PRIMARY KEY AUTO_INCREMENT,
                        user_id INT,
                        refresh_token TEXT NOT NULL,
                        expires_at TIMESTAMP NOT NULL,
                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                        FOREIGN KEY (user_id) REFERENCES user_info(user_id)
                    );
                4. 
